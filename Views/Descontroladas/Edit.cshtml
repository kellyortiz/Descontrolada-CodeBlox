@model codeBlox.Models.Descontrolada

@{
    ViewBag.Title = "Alterar Produto";
}

<h2>Alterar Produto</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Descontrolada</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.preco, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.preco, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.preco, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantidade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantidade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DtCadastro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DtCadastro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DtCadastro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="input-field col s3">
            <div>
                <p>
                    @Html.LabelFor(model => model.tipoProduto, htmlAttributes: new { @class = "control-label col-md-2" })

                    @{string Organico = ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldId("Orgânico");}
                    @Html.RadioButtonFor(model => model.tipoProduto, "Orgânico", new { id = Organico, name = "tipoProduto", value = "Orgânico", @class = "with-gap" })
                    <label for="Organico">Orgânico</label>

                    @{string NOrganico = ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldId("Não Orgânico");}
                    @Html.RadioButtonFor(model => model.tipoProduto, "Não Orgânico", new { id = NOrganico, name = "tipoProduto", value = "Não Orgânico", @class = "with-gap" })
                    <label for="NOrganico">Não Orgânico</label>
                </p>
                @Html.ValidationMessageFor(model => model.tipoProduto, "", new { @class = "red-text text-darken-2" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Salvar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
